// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model member {
  member_id              Int                @id @default(autoincrement()) @map("member_id")
  pseudo                 String             @unique @db.VarChar(25)
  first_name              String             @db.VarChar(50)
  last_name              String             @db.VarChar(50)
  birthdate              DateTime           @db.Date
  email                  String             @unique @db.VarChar(100)
  bio                    String?            @db.VarChar(255)
  profile_picture_link    String             @default("https://i.ibb.co/zHVCLfz6/blank-profile-picture.png") @db.VarChar(100)
  xp                     Int                @default(0)
  password               String             @db.VarChar(255)
  created_at             DateTime           @default(now()) @db.Date

  following              member_follow[]    @relation("MemberFollowing")
  followers              member_follow[]    @relation("MemberFollower")

  @@map("member")
}

model member_follow {
  member_follow_id       Int                @id @default(autoincrement()) @map("member_follow_id")
  follower_id            Int
  followed_id            Int
  created_at             DateTime           @default(now()) @db.Date

  follower               member             @relation("MemberFollowing", fields: [follower_id], references: [member_id])
  followed               member             @relation("MemberFollower", fields: [followed_id], references: [member_id])

  @@unique([follower_id, followed_id])
  @@index([follower_id])
  @@index([followed_id])
  @@map("member_follow")
}